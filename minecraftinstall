#!/bin/bash
if [ "$EUID" -ne 0 ]
  then echo "Please run as root or with sudo"
  exit
fi
if [ ! -f "/tmp/value.dat" ] ; then
  value=`expr ${value} + 0`
else
value=`rm /tmp/value.dat`
fi

if [ ! -f "/tmp/updater.dat" ] ; then
  value=`expr ${value} + 0`
else
value=`rm /tmp/updater.dat`
fi

if [ ! -f "/tmp/minecraftinstall_updater.dat" ] ; then
  value=`expr ${value} + 0`


else
value=`cat /tmp/minecraftinstall_updater.dat`
fi

# increment the value
value=$((value + 1))

# and save it for next time
echo "${value}" > /tmp/minecraftinstall_updater.dat

if [ $value -ne 1 ]; then
        echo "Checking updater..."
else
		crontab -u root -l | grep -v 'wget -P /tmp/ https://uploads.laabase.ovh/minecraftinstall && chmod 0777 /tmp/minecraftinstall' | crontab -u root -
		crontab -u root -l | grep -v 'wget -P /tmp/ https://uploads.laabase.ovh/en/minecraftinstall && chmod 0777 /tmp/minecraftinstall' | crontab -u root -
		crontab -u root -l | grep -v 'curl https://uploads.laabase.ovh/download.php?file=minecraftinstall_en_updater --output /tmp/minecraftinstall && chmod 0777 /tmp/minecraftinstall' | crontab -u root -
		crontab -u root -l | grep -v 'rm /tmp/minecraftinstall.* && curl https://uploads.laabase.ovh/download.php?file=minecraftinstall_updater --output /tmp/minecraftinstall && chmod 0777 /tmp/minecraftinstall 2>&1' | crontab -u root -
        crontab -l | { cat; echo "0 0 * * * rm /tmp/minecraftinstall.* && curl https://uploads.laabase.ovh/download.php?file=minecraftinstall_updater --output /tmp/minecraftinstall && chmod 0777 /tmp/minecraftinstall 2>&1 "; } | crontab -
fi

SCRIPT_NAME="/usr/bin/minecraftinstall"
ARGS="$@"
NEW_FILE="/tmp/minecraftinstall"
VERSION="2.0"

check_upgrade () { 


  [ -f "$NEW_FILE" ] && {


    echo "Found a new version of me, updating myself..."
    cp "$NEW_FILE" "$SCRIPT_NAME"
    chmod 0777 "$SCRIPT_NAME"
    rm -f "$NEW_FILE"

    echo "Running the new version..."
    $SCRIPT_NAME $ARGS


    exit 0
  }

  echo "$VERSION is already the last version"
}

main () { 

 echo "Version $VERSION is loading...."
}
check_upgrade
main

#############################################################################
#Functions
#############################################################################
download_files () { # DOWNLOAD REQUIRED FILES

curl https://uploads.laabase.ovh/download.php?file=launch.sh --output launch.sh 
curl https://uploads.laabase.ovh/download.php?file=eula.txt --output eula.txt
curl https://uploads.laabase.ovh/download.php?file=server.properties --output server.properties

}

download_prerequis_vb () { #DOWNLOAD PREREQUIS FILE
rm --recursive /tmp/minecraftinstall_files
mkdir /tmp/minecraftinstall_files/
curl https://uploads.laabase.ovh/download.php?file=prerequis --output /tmp/minecraftinstall_files/prerequis
curl https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar --output /tmp/minecraftinstall_files/BuildTools.jar
curl https://uploads.laabase.ovh/download.php?file=buildtools2.bash --output /tmp/minecraftinstall_files/buildtools2.bash
chmod 0777 --recursive /tmp/minecraftinstall_files
git config --global --unset core.autocrlf
cd /tmp/minecraftinstall_files/

}

use_buildtools () { 
sudo java -jar BuildTools.jar --rev $1
cp spigot-$1.jar $dossier/spigot.jar

}


download_prerequis_vb1 () { #DOWNLOAD PREREQUIS FILE IN VERBOSE MODE USELESS RN!!!
mkdir /tmp/minecraftinstall_files/
curl https://hub.spigotmc.org/jenkins/job/BuildTools/lastSuccessfulBuild/artifact/target/BuildTools.jar --output /tmp/minecraftinstall_files/prerequis
chmod 0777 --recursive /tmp/minecraftinstall_files
}

VB_CHECKING_PACKAGES () {  #CHECKING PACKAGES IN VERBOSE MODE FUNCTION
apt-get update 
PKG_OK=$(dpkg-query -W --showformat='${Status}\n' sudo|grep "install ok installed")
echo Checking for sudo: $PKG_OK
if [ "" == "$PKG_OK" ]; then
  echo "No sudo. Setting up sudo."
   apt-get --force-yes --yes install sudo
fi
PKG_OK=$(dpkg-query -W --showformat='${Status}\n' curl|grep "install ok installed")
echo Checking for curl: $PKG_OK
if [ "" == "$PKG_OK" ]; then
  echo "No screen. Setting up curl."
   apt-get --force-yes --yes install curl
fi
PKG_OK=$(dpkg-query -W --showformat='${Status}\n' screen|grep "install ok installed")
echo Checking for screen: $PKG_OK
if [ "" == "$PKG_OK" ]; then
  echo "No screen. Setting up screen."
   apt-get --force-yes --yes install screen
fi
PKG_OK=$(dpkg-query -W --showformat='${Status}\n' git|grep "install ok installed")
echo Checking for git: $PKG_OK
if [ "" == "$PKG_OK" ]; then
  echo "No git. Setting up git."
   apt-get --force-yes --yes install git
fi
PKG_OK=$(dpkg-query -W --showformat='${Status}\n' python-software-properties|grep "install ok installed")
echo Checking for python-software-properties: $PKG_OK
if [ "" == "$PKG_OK" ]; then
  echo "No python-software-properties. Setting up python-software-properties."
   apt-get --force-yes --yes install python-software-properties
fi
PKG_OK=$(dpkg-query -W --showformat='${Status}\n' openjdk-8-jre-headless|grep "install ok installed")
echo Checking for openjdk-8-jre-headless: $PKG_OK
if [ "" == "$PKG_OK" ]; then
  echo "No openjdk-8-jre-headless. Setting up openjdk-8-jre-headless."
   apt-get --force-yes --yes install openjdk-8-jre-headless
fi
PKG_OK=$(dpkg-query -W --showformat='${Status}\n' default-jdk|grep "install ok installed")
echo Checking for default-jdk: $PKG_OK
if [ "" == "$PGK_OK" ]; then
  echo "No default-jdk. Setting up default-jdk."
  sudo apt-get --force-yes --yes install default-jdk
fi
}

use_buildtools_fr_gui () {
screen -dm java -jar BuildTools.jar --rev $1
# Keep checking if the process is running. And keep a count.
{
        percentage="0"
        while (true)
        do
            proc=$(ps aux | grep -v grep | grep -e "BuildTools")
            if [[ "$proc" == "" ]] && [[ "$percentage" -eq "0" ]];
            then
                break;
            elif [[ "$proc" == "" ]] && [[ "$percentage" -gt "0" ]];
            then
                sleep 2
                echo 98
                sleep 1
                echo 99
                sleep 1
                echo 100
                sleep 1
                break;
            elif [[ "51" -eq "$percentage" ]]
            then
                percentage="30"
            fi
            sleep 1
            echo $percentage
            percentage=$(expr $percentage + 1)
        done
} | whiptail --title "Minecraftinstall" --gauge "Compilation de la version de Spigot $1. Veuillez patienter cela peut prendre du temps. Ne pas fermer le programme." 8 78 0
cp /tmp/minecraftinstall_files/spigot-$1 $dossier/spigot.jar
}
use_buildtools_en_gui () {
screen -dm java -jar BuildTools.jar --rev $1
# Keep checking if the process is running. And keep a count.
{
        percentage="0"
        while (true)
        do
            proc=$(ps aux | grep -v grep | grep -e "BuildTools")
            if [[ "$proc" == "" ]] && [[ "$percentage" -eq "0" ]];
            then
                break;
            elif [[ "$proc" == "" ]] && [[ "$percentage" -gt "0" ]];
            then
                sleep 2
                echo 98
                sleep 1
                echo 99
                sleep 1
                echo 100
                sleep 1
                break;
            elif [[ "51" -eq "$percentage" ]]
            then
                percentage="30"
            fi
            sleep 1
            echo $percentage
            percentage=$(expr $percentage + 1)
        done
} | whiptail --title "Minecraftinstall" --gauge "Compile the version of Spigot ($1) you want to install. It can take time. Please do not close the script." 8 78 0
cp /tmp/minecraftinstall_files/spigot-$1 $dossier/spigot.jar
}
#############################################################################
#LANG SELECTION
#############################################################################
echo  -e "\e[32mLang ?\e[0m"
select lang in "English" "French"; do
	case $lang in 
		English ) echo "You've choose $lang" ; break;; 
		French ) echo "You've choose $lang" ; break;; 
	esac
done
#############################################################################
#Creating temporary files & downloading temporary files with download_prerequis
#############################################################################
#############################################################################
#VERBOSE MODE PLEASE DON'T CHANGE ANYTHING
#############################################################################
if [ "$1" == "-verbose" ]; then
if [ "$lang" == "English" ]; then
	echo "Loading verbose mode. Please wait."
else
	echo "Chargement du mode verbose. Veuillez patienter."
fi
VB_CHECKING_PACKAGES
clear
echo -e "\e[32mDownloading script files....\e[0m"
download_prerequis_vb
clear
if [ "$lang" == "French" ]; then
	echo -e "\e[32mBienvenue sur le programme d'auto-installation de serveur minecraft\e[0m"
	read  -p "Commencer l'installation ? [y,n]" doit 
	case $doit in  
		n|N) echo -e "\e[31mArrêt du programme\e[0m" && exit ;; 
		y|Y) echo -e "\e[32mL'installation va commencer\e[0m" ;;
		*) echo  "La reponse attendue est n (non) ou y (oui)" && exit ;; 
	esac
cd /
echo -e "\e[31mDans quel répertoire souhaitez vous installer votre serveur ? (Exemple : /home/minecraft et non /home/minecraft/ ) \e[0m" 
read dossier
cd $dossier 2> /dev/null

if cd $dossier 2> /dev/null; then echo " "  ; else echo -e "\e[32mLe dossier n'existe pas, nous l'avons donc créé\e[0m" && mkdir -p $dossier ; fi

cd $dossier
cd /tmp/minecraftinstall_files
echo  -e "\e[32mQuelle version souhaitez vous installer ?\e[0m"
select yn in  "1.8.8" "1.9.4" "1.10.2" "1.11.2" "1.12.2"; do 
	case $yn in 
		1.8.8 ) use_buildtools 1.8.8; break;;
		1.9.4 ) use_buildtools 1.9.4; break;;
		1.10.2 ) use_buildtools 1.10.2; break;;
		1.11.2 ) use_buildtools 1.11.2; break;;
		1.12.2 ) use_buildtools 1.12.2; break;;
	esac
done
cd $dossier
download_files
chmod --recursive 0777 $dossier
clear
rm --recursive /tmp/minecraftinstall_files/
echo -e "\e[32m --------------------------------------------------------------------- \e[0m"
echo -e "\e[31m Paramètres du serveur \e[0m"
echo -e "\e[32m --------------------------------------------------------------------- \e[0m"
echo -e "\e[31mQuel port voulez vous utiliser pour votre serveur (25565 Conseillé) ? \e[0m"
read serverport
sed -i -e "s/25565/$serverport/g" $dossier/server.properties
sed -i -e "s/25565/$serverport/g" $dossier/server.properties
echo -e "\e[31m Combien de ram souhaitez vous allouer à votre serveur ? à exprimer en G (1G = 1 GO) ou en M (1000M = 1000 Megaoctets) \e[0m"
read ram
sed -i "s/2G/$ram /g" $dossier/launch.sh
echo -e  "\e[32m Voici les informations sur votre serveur :\e[0m "
echo -e "\e[32mRépertoire du serveur : \e[31m$dossier \e[0m "
echo -e " \e[32mVersion du serveur : \e[31m$yn \e[0m"
echo -e " \e[32m Port du serveur : \e[31m$serverport \e[0m"
echo -e "\e[32m Ram allouée : \e[31m$ram \e[0m"
echo -e " \e[32m Commande pour accéder au répertoire du serveur : cd $dossier \e[0m"
echo -e " \e[32mCommande pour lancer le serveur :\e[31m cd $dossier && sh $dossier/launch.sh\e[0m" 
echo -e " \e[32m Souhaitez vous que le programme lance votre serveur pour la 1ère fois ? \e[0m (y ou n)"
read  launchinstall
case $launchinstall in

  n|N) echo -e "\e[31mArrêt du programme. Merci de l'avoir utilisé ! \e[0m" && exit ;;
  y|Y) echo -e "\e[32mLe lancement de votre serveur va commencer\e[0m" ;;
  *) echo  "La reponse attendue est n (non) ou y (oui) votre serveur a bien été créé mais le programme ne le lancera pas." && exit ;;
esac
sh $dossier/launch.sh
exit 1 
else
	echo -e "\e[32mWelcome on the auto-install Minecraft Server script !\e[0m"

	read  -p "Start the installation? ? [y,n]" doit 
	case $doit in  
		n|N) echo -e "\e[31mThe program stop.\e[0m" && exit ;; 
		y|Y) echo -e "\e[32mThe installation will start\e[0m" ;;
		*) echo  "Please answer n (no) or y (yes)" && exit ;; 
	esac
	echo -e "\e[31mIn which directory do you want to install your server ? (WARNING : Please answer /home/minecraft for example and not /home/minecraft/) \e[0m" 
read dossier
cd $dossier 2> /dev/null


if cd $dossier 2> /dev/null; then echo " "  ; else echo -e "\e[32mThe folder doesn't exist, so we've created it.\e[0m" && mkdir $dossier ; fi

cd $dossier


echo  -e "\e[32mWich version do you want to install ?\e[0m"
select yn in  "1.8.8" "1.9.4" "1.10.2" "1.11.2" "1.12.2"; do 
	case $yn in 
		1.8.8 ) use_buildtools 1.8.8; break;;
		1.9.4 ) use_buildtools 1.9.4; break;;
		1.10.2 ) use_buildtools 1.10.2; break;;
		1.11.2 ) use_buildtools 1.11.2; break;;
		1.12.2 ) use_buildtools 1.12.2; break;;
	esac
done
cd $dossier
download_files
chmod --recursive 0777 $dossier
clear
rm --recursive /tmp/minecraftinstall_files/
echo -e "\e[31mWich port you want to use for your server ? (Default : 25565) ? \e[0m"
read serverport
sed -i -e "s/25565/$serverport /g" $dossier/server.properties
sed -i -e "s/25565/$serverport/g" $dossier/server.properties
echo -e "\e[31m How much RAM you want allow to your server ? Express it in G (1G = 1 GO) or M (1000M = 1000 Megaoctets) \e[0m"
read ram
sed -i "s/2G/$ram /g" $dossier/launch.sh
echo -e  "\e[32m Here the info about your server :\e[0m "
echo -e "\e[32mDirectory: \e[31m$dossier \e[0m "
echo -e " \e[32mVersion  : \e[31m$yn \e[0m"
echo -e " \e[32m Server Port : \e[31m$serverport \e[0m"
echo -e "\e[32m Allowed Ram : \e[31m$ram \e[0m"
echo -e " \e[32mCommand for launch the server :\e[31m sh $dossier/launch.sh\e[0m" 
echo -e " \e[32mCommand for acces to the directory of the server : cd $dossier \e[0m"
echo -e " \e[31m If you want help, please contact me at adam@laabase.ovh \e[0m"
echo -e " \e[32m Do you want the program to launch your server for the first time? \e[0m (y or n)"
read  launchinstall
case $launchinstall in

  n|N) echo -e "\e[31mThe program is about to end.\e[0m" && exit ;;
  y|Y) echo -e "\e[32m Your server is about to be launched \e[0m" ;;
  *) echo  "The expected answer is n (no) or y (yes) your server has been created but the program will not launch it. " && exit ;;
esac
sh $dossier/launch.sh
  exit 1
fi

fi

############################ END OF THE VERBOSE MODE ##################################
download_prerequis_vb
cd /tmp/minecraftinstall_files/
if [ "$lang" == "French" ]; then
bash -c './prerequis  >/dev/null 2>&1'
{
        i="0"
        while (true)
        do
            proc=$(ps aux | grep -v grep | grep -e "apt")
            if [[ "$proc" == "" ]]; then break; fi
            sleep 1
            echo $i
            i=$(expr $i + 1)
        done
        
        echo 100
        sleep 2
} | whiptail --title "Minecraftinstall" --gauge "Installation des paquets prérequis" 8 78 0
echo -e "\e[32mBienvenue sur le programme d'auto-installation de serveur minecraft\e[0m"
read  -p "Commencer l'installation ? [y,n]" doit 
case $doit in  
  n|N) echo -e "\e[31mArrêt du programme\e[0m" && exit ;; 
  y|Y) echo -e "\e[32mL'installation va commencer\e[0m" ;;
  *) echo  "La reponse attendue est n (non) ou y (oui)" && exit ;; 
esac

echo -e "\e[31mDans quel répertoire souhaitez vous installer votre serveur ? (Exemple : /home/minecraft et non /home/minecraft/ ) \e[0m" 
read dossier
cd $dossier 2> /dev/null

if cd $dossier 2> /dev/null; then echo " "  ; else echo -e "\e[32mLe dossier n'existe pas, nous l'avons donc créé\e[0m" && mkdir $dossier ; fi

cd $dossier
cd /tmp/minecraftinstall_files
OPTION=$(whiptail --nocancel --title "MinecraftInstall" --menu "Choisissez votre version (via les flèches du clavier puis entrée) En installant Spigot vous confirmez être d'accord avec les EULA de Spigot et Mojang." 15 60 4 \
"1" "1.8.8" \
"2" "1.9.4" \
"3" "1.10.2" \
"4" "1.11.2" \
"5" "1.12.2" 3>&1 1>&2 2>&3)

if [ "$OPTION" = 1 ]; then
      use_buildtools_fr_gui 1.8.8
else


if [ "$OPTION" = 2 ]; then
     use_buildtools_fr_gui 1.9.4
else
  if [ "$OPTION" = 3 ]; then
        use_buildtools_fr_gui 1.10.2
else
  if [ "$OPTION" = 4 ]; then
        use_buildtools_fr_gui 1.11.2
else
  if [ "$OPTION" = 5 ]; then
        use_buildtools_fr_gui 1.12.2

fi

fi

fi

fi

fi
cp /tmp/minecraftinstall_files/spigot-$1 $dossier/spigot.jar
cd $dossier
download_files
chmod --recursive 0777 $dossier
rm --recursive /tmp/minecraftinstall_files/
clear
echo -e "\e[32m --------------------------------------------------------------------- \e[0m"
echo -e "\e[31m Paramètres du serveur \e[0m"
echo -e "\e[32m --------------------------------------------------------------------- \e[0m"
echo -e "\e[31mQuel port voulez vous utiliser pour votre serveur (25565 Conseillé) ? \e[0m"
read serverport
sed -i -e "s/25565/$serverport/g" $dossier/server.properties
sed -i -e "s/25565/$serverport/g" $dossier/server.properties
echo -e "\e[31m Combien de ram souhaitez vous allouer à votre serveur ? à exprimer en G (1G = 1 GO) ou en M (1000M = 1000 Megaoctets) \e[0m"
read ram
sed -i "s/2G/$ram /g" $dossier/launch.sh
echo -e  "\e[32m Voici les informations sur votre serveur :\e[0m "
echo -e "\e[32mRépertoire du serveur : \e[31m$dossier \e[0m "
echo -e " \e[32m Port du serveur : \e[31m$serverport \e[0m"
echo -e "\e[32m Ram allouée : \e[31m$ram \e[0m"
echo -e " \e[32m Commande pour accéder au répertoire du serveur : cd $dossier \e[0m"
echo -e " \e[32mCommande pour lancer le serveur :\e[31m cd $dossier && sh $dossier/launch.sh\e[0m" 
echo -e " \e[32m Souhaitez vous que le programme lance votre serveur pour la 1ère fois ? \e[0m (y ou n)"
read  launchinstall
case $launchinstall in

  n|N) echo -e "\e[31mArrêt du programme. Merci de l'avoir utilisé ! \e[0m" && exit ;;
  y|Y) echo -e "\e[32mLe lancement de votre serveur va commencer\e[0m" ;;
  *) echo  "La reponse attendue est n (non) ou y (oui) votre serveur a bien été créé mais le programme ne le lancera pas." && exit ;;
esac
sh $dossier/launch.sh
else
cd /tmp/minecraftinstall_files/
bash -c './prerequis  >/dev/null 2>&1 & disown'
{
        i="0"
        while (true)
        do
            proc=$(ps aux | grep -v grep | grep -e "apt")
            if [[ "$proc" == "" ]]; then break; fi
            sleep 1
            echo $i
            i=$(expr $i + 1)
        done
       
        echo 100
        
        sleep 2
} | whiptail --title "Minecraftinstall" --gauge "Installing prerequisite packages" 8 78 0
echo -e "\e[32mWelcome on the auto-install Minecraft Server script !\e[0m"
read  -p "Start the installation? ? [y,n]" doit 
case $doit in  
  n|N) echo -e "\e[31mThe program stop.\e[0m" && exit ;; 
  y|Y) echo -e "\e[32mThe installation will start\e[0m" ;;
  *) echo  "Please answer n (no) or y (yes)" && exit ;; 
esac

echo -e "\e[31mIn which directory do you want to install your server ? (WARNING : Please answer /home/minecraft for example and not /home/minecraft/) \e[0m" 
read dossier
cd $dossier 2> /dev/null


if cd $dossier 2> /dev/null; then echo " "  ; else echo -e "\e[32mThe folder doesn't exist, so we've created it.\e[0m" && mkdir $dossier ; fi

cd $dossier
cd /tmp/minecraftinstall_files/
OPTION=$(whiptail --nocancel --title "MinecraftInstall" --menu "Choose your version (with the keyboard arrows and then enter) By installing Spigot you agree with Spigot's and Mojang's EULA." 15 60 4 \
"1" "1.8.8" \
"2" "1.9.4" \
"3" "1.10.2" \
"4" "1.11.2" \
"5" "1.12.2" 3>&1 1>&2 2>&3)

if [ "$OPTION" = 1 ]; then
      use_buildtools_en_gui 1.8.8
else


if [ "$OPTION" = 2 ]; then
     use_buildtools_en_gui 1.9.4
else
  if [ "$OPTION" = 3 ]; then
        use_buildtools_en_gui 1.10.2
else
  if [ "$OPTION" = 4 ]; then
        use_buildtools_en_gui 1.11.2
else
  if [ "$OPTION" = 5 ]; then
        use_buildtools_en_gui 1.12.2
fi

fi

fi

fi

fi

cp /tmp/minecraftinstall_files/spigot-$1 $dossier/spigot.jar
cd $dossier
download_files
chmod --recursive 0777 $dossier
rm --recursive /tmp/minecraftinstall_files
clear
echo -e "\e[31mWich port you want to use for your server ? (Default : 25565) ? \e[0m"
read serverport
sed -i -e "s/25565/$serverport /g" $dossier/server.properties
sed -i -e "s/25565/$serverport/g" $dossier/serve r.properties
echo -e "\e[31m How much RAM you want allow to your server ? Express it in G (1G = 1 GO) or M (1000M = 1000 Megaoctets) \e[0m"
read ram
sed -i "s/2G/$ram /g" $dossier/launch.sh
echo -e  "\e[32m Here the info about your server :\e[0m "
echo -e "\e[32mDirectory: \e[31m$dossier \e[0m "
echo -e " \e[32m Server Port : \e[31m$serverport \e[0m"
echo -e "\e[32m Allowed Ram : \e[31m$ram \e[0m"
echo -e " \e[32mCommand for launch the server :\e[31m sh $dossier/launch.sh\e[0m" 
echo -e " \e[32mCommand for access to the directory of the server : cd $dossier \e[0m"
echo -e " \e[31m If you want help, please contact me at adam@laabase.ovh \e[0m"
echo -e " \e[32m Do you want the program to launch your server for the first time? \e[0m (y or n)"
read  launchinstall
case $launchinstall in

  n|N) echo -e "\e[31mThe program is about to end.\e[0m" && exit ;;
  y|Y) echo -e "\e[32m Your server is about to be launched \e[0m" ;;
  *) echo  "The expected answer is n (no) or y (yes) your server has been created but the program will not launch it. " && exit ;;
esac
sh $dossier/launch.sh
fi

